let args = process.argv.slice(2);
let fs = require("fs");
let text = fs.readFileSync(args[2], "utf-8");

function EscapeEncoding(text) {
  let result = "";

  if (text.length === 0) {
    console.log("What? this is error!");
    return;
  }

  let len = 1;
  for (let i = 0; i < text.length; i++) {
    if (i + 1 < text.length && text[i] === text[i + 1]) {
      len += 1;
    } else {
      while (len > 0) {
        if (text[i] === "#") {
          if (len > 256) {
            result += '#' + String.fromCharCode(255) + text[i];
            len -= 256;
          } else {
            result += '#' + String.fromCharCode(len - 1) + text[i];
            len = 0;
          }
        } else {
          if (len > 259) {
            result += '#' + String.fromCharCode(255) + text[i];
            len -= 259;
          } else if (len >= 4) {
            result += '#' + String.fromCharCode(len - 4) + text[i];
            len = 0;
          } else {
            while (len > 0) {
              result += text[i];
              len--;
            }
            len = 0;
          }
        }
      }
      len = 1;
    }
  }
  return result;
}

function EscapeDecoding(text) {
  let result = "";
  if (text.length === 0) {
    console.log("What? This is error!");
    return;
  }
  for (let i = 0; i < text.length; i++) {
    if (text[i] === '#') {
      if (text[i + 2] === '#') {
        for (let j = 0; j < text.charCodeAt(i + 1) + 1; j++) {
          result += text[i + 2];
        }
        i += 2;
      } else {
        for (let k = 0; k < text.charCodeAt(i + 1) + 4; k++) {
          result += text[i + 2];
        }
        i += 2;
      }
    } else {
      result += text[i];
    }
  }
  return result;
}

let firstarg = args[0];

switch (firstarg) {
  case "-h":
    console.log("This program can help you encode and decode text from your file. For start enter -e (escapecode) or -j (jumpcode) AND -e (encode) or -d (decode)");
    break;

  case "-e":
    let secondArg = args[1];
    switch (secondArg) {
      case "-e":
        let encodedText = EscapeEncoding(text);
        fs.writeFileSync(args[3], encodedText, "utf-8");
        console.log("Text encoded and saved to encoded.txt");
        break;

      case "-d":
        let decodedText = EscapeDecoding(text);
        fs.writeFileSync(args[3], decodedText, "utf-8");
        console.log("Text decoded and saved to decoded.txt");
        break;

      default:
        console.log("Error! Invalid second argument. Use -e for encode or -d for decode.");
    }
    break;

  case "-j":
    let secondArgJump = args[1];
    switch (secondArgJump) {
      case "-e":
        // Здесь должна быть логика для jumpcode encode
        console.log("Jumpcode encode not implemented yet.");
        break;

      case "-d":
        // Здесь должна быть логика для jumpcode decode
        console.log("Jumpcode decode not implemented yet.");
        break;

      default:
        console.log("Error! Invalid second argument. Use -e for encode or -d for decode.");
    }
    break;

  default:
    console.log("Error! Invalid first argument. Use -h for help.");
}
